[package]
name = "libz-rs-sys-cdylib"
version = "0.3.0"
edition = "2021"
readme = "README.md"
license = "Zlib"
repository = "https://github.com/trifectatechfoundation/zlib-rs"
homepage = "https://github.com/trifectatechfoundation/zlib-rs"
publish = true
description = "A memory-safe zlib implementation written in rust"
rust-version = "1.75" # MSRV

[lib]
name = "z_rs" # turns into e.g. `libz_rs.so`
crate-type=["cdylib"]

[features]
default = ["c-allocator"] # when used as a cdylib crate, use the c allocator
c-allocator = ["libz-rs-sys/c-allocator"] # by default, use malloc/free for memory allocation
rust-allocator = ["libz-rs-sys/rust-allocator", "libz-rs-sys/std"] # by default, use the rust global alloctor for memory allocation
custom-prefix = ["libz-rs-sys/custom-prefix"] # use the LIBZ_RS_SYS_PREFIX to prefix all exported symbols

[dependencies]
libz-rs-sys = { version = "0.3.0", path = "../libz-rs-sys", default-features = false }
